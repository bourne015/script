server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name fantao.life phantasys.life fantao.live botsdock.com www.botsdock.com;
	return 301 https://$host$request_uri;

	#location / {
	#	root /var/www//html;
	#	try_files $uri $uri/ /index.html =404;
	#}


}

#https://fantao.life
server {
	listen 443 ssl;
	listen [::]:443 ssl;

	ssl_certificate /etc/letsencrypt/live/www.fantao.live/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/www.fantao.live/privkey.pem; # managed by Certbot
	# test
	ssl_session_timeout 1d;
	#ssl_session_cache shared:MozSSL:10m;
	ssl_session_tickets off;
	ssl_session_cache shared:le_nginx_SSL:10m;

  	ssl_protocols         TLSv1.2 TLSv1.3;
	ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
  	ssl_prefer_server_ciphers off;
	# ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  	server_name	fantao.live;
  	client_max_body_size 50M;
	error_log /var/log/nginx/error.log debug;
  	location / {
    		root /home/fan/www/web;
		try_files $uri $uri/ /index.html =404;
		#proxy_ssl_server_name on;
		#proxy_pass $scheme://$host:8$server_port$request_uri;
		#proxy_ssl_verify off;
  	}
}

##botsdock.com
server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        ssl_certificate /etc/letsencrypt/live/www.botsdock.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/www.botsdock.com/privkey.pem; # managed by Certbot
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;
        ssl_session_tickets off;
        # ssl_session_cache shared:le_nginx_SSL:10m;

	ssl_stapling on;
	ssl_stapling_verify on;

        ssl_protocols         TLSv1.2 TLSv1.3;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
        ssl_prefer_server_ciphers off;
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        server_name     botsdock.com www.botsdock.com;
        client_max_body_size 50M;
        error_log /var/log/nginx/error.log debug;
		
	# 安全相关头信息
	add_header X-Content-Type-Options nosniff;
	add_header X-Frame-Options SAMEORIGIN;
	add_header X-XSS-Protection "1; mode=block";

	gzip  on;
	gzip_min_length 1k;
	gzip_buffers 16 64k;
	gzip_comp_level 6;
	gzip_types text/plain text/css text/javascript text/xml application/json application/x-javascript application/javascript application/xml application/xml+rss image/jpeg image/gif image/png image/jpg application/wasm;
	gzip_disable "MSIE [1-6]\.";
	gzip_vary on;
	# 静态资源缓存配置
	location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|json)$ {
		root /home/fan/www/web;
		expires 30d;
		add_header Cache-Control "public, no-transform";
		try_files $uri =404;
	}
        location / {
                # root /var/www/bots/web;
    		root /home/fan/www/web;
                try_files $uri $uri/ /index.html =404;
                #proxy_ssl_server_name on;
                #proxy_pass $scheme://$host:8$server_port$request_uri;
                #proxy_ssl_verify off;
        }
}
##end

## support https for backend service
## backend service runs on 8002, frontend request https on 8001 or 8443
server {
	  listen 8001 ssl;
	  listen [::]:8001 ssl;

	  ssl_certificate       /etc/letsencrypt/live/www.fantao.live/fullchain.pem;
	  ssl_certificate_key   /etc/letsencrypt/live/www.fantao.live/privkey.pem;
	  ssl_session_timeout 1d;
	  ssl_session_cache shared:MozSSL:10m;
	  ssl_session_tickets off;

	  ssl_protocols         TLSv1.2 TLSv1.3;
	  ssl_ciphers           ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	  ssl_prefer_server_ciphers off;

	  server_name           fantao.live;

	 location / {
		 proxy_redirect off;
		 proxy_pass http://127.0.0.1:8002;
	    	 proxy_http_version 1.1;
	    	 proxy_set_header Upgrade $http_upgrade;
	    	 proxy_set_header Connection "upgrade";
	    	 proxy_set_header Host $host;
	    	 # Show real IP in v2ray access.log
	    	 proxy_set_header X-Real-IP $remote_addr;
	    	 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	  }

}

server {
          listen 8443 ssl http2;
          listen [::]:8443 ssl http2;

          ssl_certificate       /etc/letsencrypt/live/www.botsdock.com/fullchain.pem;
          ssl_certificate_key   /etc/letsencrypt/live/www.botsdock.com/privkey.pem;
          ssl_session_timeout 1d;
          ssl_session_cache shared:MozSSL:10m;
          ssl_session_tickets off;

          ssl_protocols         TLSv1.2 TLSv1.3;
	  ssl_ciphers           ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
          ssl_prefer_server_ciphers off;

          server_name           botsdock.com www.botsdock.com;

	  # API请求日志
	  access_log /var/log/nginx/api_access.log;
	  error_log /var/log/nginx/api_error.log;

	  # 启用压缩以减少API响应大小
	  gzip on;
	  gzip_min_length 1k;
	  gzip_comp_level 6;
	  gzip_types application/json text/plain application/xml application/javascript;
	  gzip_vary on;

         location / {
                 proxy_redirect off;
                 #proxy_pass http://35.222.187.166:8002;
                 proxy_pass http://127.0.0.1:8002;
                 proxy_http_version 1.1;
                 proxy_set_header Upgrade $http_upgrade;
                 proxy_set_header Connection "upgrade";
                 proxy_set_header Host $host;
                 # Show real IP in v2ray access.log
                 proxy_set_header X-Real-IP $remote_addr;
                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		 proxy_set_header X-Forwarded-Proto $scheme;

		 # 安全相关头信息
		 add_header X-Content-Type-Options nosniff;
		 add_header X-XSS-Protection "1; mode=block";

		 # 缓冲区设置
		 proxy_buffering on;
		 proxy_buffer_size 16k;
		 proxy_busy_buffers_size 24k;
		 proxy_buffers 64 4k;
          }
}

#v2ray
server {
	listen 8015 ssl;
  	listen [::]:8015 ssl;

  	# ssl_certificate       /home/fan/.acme.sh/fantao.life_ecc/fantao.life.cer;
  	# ssl_certificate_key   /home/fan/.acme.sh/fantao.life_ecc/fantao.life.key;
  	# ssl_certificate       /etc/letsencrypt/live/www.phantasys.life/fullchain.pem;
  	# ssl_certificate_key   /etc/letsencrypt/live/www.phantasys.life/privkey.pem;
  	ssl_certificate       /etc/letsencrypt/live/www.fantao.live/fullchain.pem;
  	ssl_certificate_key   /etc/letsencrypt/live/www.fantao.live/privkey.pem;
  	ssl_session_timeout 1d;
  	ssl_session_cache shared:MozSSL:10m;
  	ssl_session_tickets off;

  	ssl_protocols         TLSv1.2 TLSv1.3;
  	ssl_ciphers           ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  	ssl_prefer_server_ciphers off;

  	# server_name           phantasys.life;
  	server_name           fantao.live;
  	client_max_body_size 50M;
  	location / {
    		root /home/fan/www/web;
  		try_files $uri $uri/ /index.html =404;
  	}
  	location /ray { # 与 V2Ray 配置中的 path 保持一致
    		if ($http_upgrade != "websocket") {
        		return 404;
    		}
    		proxy_redirect off;
    		proxy_pass http://127.0.0.1:15000; # 假设WebSocket监听在环回地址的15000端口上
    		proxy_http_version 1.1;
	    	proxy_set_header Upgrade $http_upgrade;
	    	proxy_set_header Connection "upgrade";
	    	proxy_set_header Host $host;
	    	# Show real IP in v2ray access.log
	    	proxy_set_header X-Real-IP $remote_addr;
	    	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  	}
}
